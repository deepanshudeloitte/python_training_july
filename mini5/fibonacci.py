# decorator function
def even_numbers_only(generator_func):
    def wrapper():
        # enerator using the original generator function
        generator = generator_func()

        # Iterate over the numbers generated by the original generator
        for num in generator:
            # Check if the number is even
            if num % 2 == 0:
                # Yield the even number
                yield num

    return wrapper


@even_numbers_only
def fibonacci():
    # Initialize the first two numbers in the sequence
    a, b = 0, 1

    # Generate the Fibonacci sequence
    while True:
        yield a

        # Calculate the next number in the sequence
        a, b = b, a + b


# Test the generator by printing the generated even Fibonacci numbers
for i, num in enumerate(fibonacci(), start=1):
    print(f"{num}")

    # Break the loop after printing the first 10 even Fibonacci numbers
    if i == 15:
        break
